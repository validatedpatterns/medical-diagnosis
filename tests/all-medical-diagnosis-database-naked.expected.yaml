---
# Source: xraydb/templates/db-host-cm.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: database-host
  namespace: xraylab-1
  annotations:
    argocd.argoproj.io/sync-wave: "1"
data:
  url: xraylabdb
---
# Source: xraydb/templates/db-init-cm.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: xraylabdb-init
  namespace: xraylab-1
  annotations:
    argocd.argoproj.io/sync-wave: "1"
data:
  90-init-data.sh: |
    init_database() {
        local thisdir
        local init_data_file
        thisdir=$(dirname ${BASH_SOURCE[0]})

        init_data_file=$(readlink -f ${thisdir}/../mysql-data/schema.sql)
        log_info "Initializing the database schema from file ${init_data_file}..."
        mysql $mysql_flags ${MYSQL_DATABASE} < ${init_data_file}

        init_data_file=$(readlink -f ${thisdir}/../mysql-data/import.sql)
        log_info "Initializing the database data from file ${init_data_file}..."
        mysql $mysql_flags ${MYSQL_DATABASE} < ${init_data_file}
    }

    #if ! [ -v MYSQL_RUNNING_AS_SLAVE ] && $MYSQL_DATADIR_FIRST_INIT ; then
        init_database
        #fi

  import.sql: >-
    INSERT INTO `images_uploaded` (`time`,`name`) SELECT CURRENT_TIMESTAMP(), '';

    INSERT INTO `images_processed` (`time`,`name`,`model`,`label`) SELECT CURRENT_TIMESTAMP(), '', '','';

    INSERT INTO `images_anonymized` (`time`,`name`) SELECT CURRENT_TIMESTAMP(), '';

  schema.sql: >-
    DROP TABLE IF EXISTS `images_uploaded`;

    DROP TABLE IF EXISTS `images_processed`;

    DROP TABLE IF EXISTS `images_anonymized`;

    CREATE TABLE `images_uploaded` (`time` TIMESTAMP, `name` VARCHAR(255));

    CREATE TABLE `images_processed` (`time` TIMESTAMP, `name` VARCHAR(255), `model` VARCHAR(10), `label` VARCHAR(20));

    CREATE TABLE `images_anonymized` (`time` TIMESTAMP, `name` VARCHAR(255));
---
# Source: xraydb/templates/deploymentconfig.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: xraylabdb
  namespace: "xraylab-1"
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=True
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
##storageClassName: 
  storageClassName: gp2
  volumeMode: Filesystem
---
# Source: xraydb/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: xraylabdb
  namespace: "xraylab-1"
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  ports:
    - name: mariadb
      protocol: TCP
      port: 3306
      targetPort: 3306
  selector:
    app: xraylabdb
---
# Source: xraydb/templates/deploymentconfig.yaml
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: xraylabdb
  namespace: "xraylab-1"
  labels:
    app: xraylabdb
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=True
spec:
  strategy:
    type: Recreate
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 3
  test: false
  selector:
    app: xraylabdb
  template:
    metadata:
      labels:
        app: xraylabdb
    spec:
      containers:
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - >-
                  MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER
                  -D $MYSQL_DATABASE -e 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: mariadb
          livenessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: database-user
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: database-root-password
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: database-password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: database-db
            - name: MYSQL_MASTER_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: database-master-user
            - name: MYSQL_MASTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: database-master-password
          ports:
            - containerPort: 3306
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: xraylabdb-data
              mountPath: /var/lib/mysql/data
            - name: xraylabdb-init
              mountPath: /opt/app-root/src/mysql-init/90-init-data.sh
              subPath: 90-init-data.sh
            - mountPath: /opt/app-root/src/mysql-data/import.sql
              name: xraylabdb-init
              subPath: import.sql
            - name: xraylabdb-init
              mountPath: /opt/app-root/src/mysql-data/schema.sql
              subPath: schema.sql
          terminationMessagePolicy: File
          image: registry.redhat.io/rhel8/mariadb-103:latest
      volumes:
      - configMap:
          defaultMode: 420
          name: xraylabdb-init
        name: xraylabdb-init
      - name: xraylabdb-data
        persistentVolumeClaim:
          claimName: xraylabdb
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
---
# Source: xraydb/templates/external-secret-db.yaml
apiVersion: "external-secrets.io/v1beta1"
kind: ExternalSecret
metadata:
  name: xraydb-external-secret
  namespace: xraylab-1
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: db-secret
    template:
      type: Opaque
  dataFrom:
  - extract:
      key: secret/data/hub/xraylab
